{
  "openapi": "3.0.2",
  "info": {
    "title": "API Template",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://{domain}/api/{version}",
      "variables": {
        "domain": {
          "description": "API Domain",
          "default": "localhost:8000",
          "enum": [
            "localhost:8000"
          ]
        },
        "version": {
          "description": "API Version",
          "default": "v1",
          "enum": [
            "v1"
          ]
        }
      }
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Application users"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "operationId": "createUser",
        "security": [],
        "requestBody": {
          "required": true,
          "description": "User resource",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "format": "password",
                    "type": "string",
                    "pattern": "[A-Z]{2}[0-9]{4}"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "email"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 1,
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "minLength": 3
                    },
                    "email": {
                      "format": "email",
                      "type": "string"
                    },
                    "token": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "field": "Something is wrong with this field!"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bearer token is missing or invalid."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by name",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": false
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "filter by email",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit results",
            "required": false,
            "schema": {
              "default": 100,
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sorting column",
            "required": false,
            "schema": {
              "default": "id",
              "type": "string"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "sorting direction",
            "required": false,
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The cursor pointing to the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "with",
            "in": "query",
            "description": "The relations of the resource",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "User collection resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "email"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": 1,
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "minLength": 3
                          },
                          "email": {
                            "format": "email",
                            "type": "string"
                          },
                          "token": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "field": "Something is wrong with this field!"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bearer token is missing or invalid."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "with",
            "in": "query",
            "description": "The relations of the resource",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "email"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 1,
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "minLength": 3
                    },
                    "email": {
                      "format": "email",
                      "type": "string"
                    },
                    "token": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bearer token is missing or invalid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "field": "Something is wrong with this field!"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update existing user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "User resource",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "format": "password",
                    "type": "string",
                    "pattern": "[A-Z]{2}[0-9]{4}"
                  }
                },
                "minProperties": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "email"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 1,
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "minLength": 3
                    },
                    "email": {
                      "format": "email",
                      "type": "string"
                    },
                    "token": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "field": "Something is wrong with this field!"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bearer token is missing or invalid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "field": "Something is wrong with this field!"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "headers": {
      "Content-Type": {
        "description": "Content Type of the resource",
        "schema": {
          "type": "string",
          "enum": [
            "application/json"
          ]
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bearer token is missing or invalid."
                }
              }
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Bad Request Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The given data was invalid."
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "field": "Something is wrong with this field!"
                  }
                }
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The given data was invalid."
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "field": "Something is wrong with this field!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "With": {
        "name": "with",
        "in": "query",
        "description": "The relations of the resource",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "explode": false
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "description": "limit results",
        "required": false,
        "schema": {
          "default": 100,
          "type": "integer"
        }
      },
      "SortBy": {
        "name": "sortBy",
        "in": "query",
        "description": "sorting column",
        "required": false,
        "schema": {
          "default": "id",
          "type": "string"
        }
      },
      "SortDir": {
        "name": "sortDir",
        "in": "query",
        "description": "sorting direction",
        "required": false,
        "schema": {
          "default": "asc",
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      },
      "Cursor": {
        "name": "cursor",
        "in": "query",
        "description": "The cursor pointing to the next page",
        "required": false,
        "schema": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "The given data was invalid."
          },
          "errors": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string"
              }
            },
            "example": {
              "field": "Something is wrong with this field!"
            }
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bearer token is missing or invalid."
          }
        }
      },
      "Cursor": {
        "type": "string",
        "nullable": true
      }
    }
  }
}
