openapi: 3.0.2
info:
  title: API Template
  version: 1.0.0
servers:
  - url: http://{domain}/api/{version}
    variables:
      domain:
        description: API Domain
        default: localhost:8000
        enum:
          - localhost:8000
      version:
        description: API Version
        default: v1
        enum:
          - v1
security:
  - bearerAuth: []
tags:
  - name: Users
    description: Application users
paths:
  '/users':
    post:
      $ref: 'user/create-user.yaml'
    get:
      $ref: 'user/get-users.yaml'
  '/users/{id}':
    get:
      $ref: 'user/get-user.yaml'
    patch:
      $ref: 'user/update-user.yaml'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  headers:
    Content-Type:
      description: Content Type of the resource
      schema:
        type: string
        enum:
          - application/json
  responses:
    UnauthorizedError:
      description: Unauthorized Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
    BadRequestError:
      description: Bad Request Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Not Found Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    With:
      name: with
      in: query
      description: The relations of the resource
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
    Limit:
      name: limit
      in: query
      description: limit results
      required: false
      schema:
        default: 100
        type: integer
    SortBy:
      name: sortBy
      in: query
      description: sorting column
      required: false
      schema:
        default: 'id'
        type: string
    SortDir:
      name: sortDir
      in: query
      description: sorting direction
      required: false
      schema:
        default: asc
        type: string
        enum:
          - asc
          - desc
    Cursor:
      name: cursor
      in: query
      description: The cursor pointing to the next page
      required: false
      schema:
        $ref: '#/components/schemas/Cursor'
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: The given data was invalid.
        errors:
          type: object
          properties:
            field:
              type: string
          example:
            field: Something is wrong with this field!
    Unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Bearer token is missing or invalid.
    Cursor:
      type: string
      nullable: true
